# Compute Module - Virtual Machines for AMA Training
# This module handles VM creation and uses the Network module for networking infrastructure

# Linux Virtual Machines
# LinAMAPortalDep
resource "azurerm_public_ip" "lin_ama_portal_dep_pip" {
  name                = "LinAMAPortalDep-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"
  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "lin_ama_portal_dep_nic" {
  name                = "LinAMAPortalDep-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.lin_ama_portal_dep_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "lin_ama_portal_dep_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.lin_ama_portal_dep_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_linux_virtual_machine" "lin_ama_portal_dep" {
  name                = "LinAMAPortalDep"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  disable_password_authentication = false

  network_interface_ids = [
    azurerm_network_interface.lin_ama_portal_dep_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR Portal Deployment Lab"
  })
}

# LinAMAPSDeploy
resource "azurerm_public_ip" "lin_ama_ps_deploy_pip" {
  name                = "LinAMAPSDeploy-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "lin_ama_ps_deploy_nic" {
  name                = "LinAMAPSDeploy-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.lin_ama_ps_deploy_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "lin_ama_ps_deploy_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.lin_ama_ps_deploy_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_linux_virtual_machine" "lin_ama_ps_deploy" {
  name                = "LinAMAPSDeploy"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  disable_password_authentication = false

  network_interface_ids = [
    azurerm_network_interface.lin_ama_ps_deploy_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR PowerShell Deployment Lab"
  })
}

# LinAMACLIDeploy
resource "azurerm_public_ip" "lin_ama_cli_deploy_pip" {
  name                = "LinAMACLIDeploy-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "lin_ama_cli_deploy_nic" {
  name                = "LinAMACLIDeploy-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.lin_ama_cli_deploy_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "lin_ama_cli_deploy_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.lin_ama_cli_deploy_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_linux_virtual_machine" "lin_ama_cli_deploy" {
  name                = "LinAMACLIDeploy"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  disable_password_authentication = false

  network_interface_ids = [
    azurerm_network_interface.lin_ama_cli_deploy_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR CLI Deployment Lab"
  })
}

# LinAMAPolicyDep
resource "azurerm_public_ip" "lin_ama_policy_dep_pip" {
  name                = "LinAMAPolicyDep-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "lin_ama_policy_dep_nic" {
  name                = "LinAMAPolicyDep-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.lin_ama_policy_dep_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "lin_ama_policy_dep_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.lin_ama_policy_dep_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_linux_virtual_machine" "lin_ama_policy_dep" {
  name                = "LinAMAPolicyDep"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  disable_password_authentication = false

  network_interface_ids = [
    azurerm_network_interface.lin_ama_policy_dep_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "Agent Policy Based Deployment Lab"
  })
}

# Windows Virtual Machines
# WinAMAPortalDep
resource "azurerm_public_ip" "win_ama_portal_dep_pip" {
  name                = "WinAMAPortalDep-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "win_ama_portal_dep_nic" {
  name                = "WinAMAPortalDep-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.win_ama_portal_dep_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "win_ama_portal_dep_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.win_ama_portal_dep_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_windows_virtual_machine" "win_ama_portal_dep" {
  name                = "WinAMAPortalDep"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  network_interface_ids = [
    azurerm_network_interface.win_ama_portal_dep_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2022-datacenter-azure-edition"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR Portal Deployment Lab"
  })
}

# WinAMAPSDeploy
resource "azurerm_public_ip" "win_ama_ps_deploy_pip" {
  name                = "WinAMAPSDeploy-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "win_ama_ps_deploy_nic" {
  name                = "WinAMAPSDeploy-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.win_ama_ps_deploy_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "win_ama_ps_deploy_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.win_ama_ps_deploy_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_windows_virtual_machine" "win_ama_ps_deploy" {
  name                = "WinAMAPSDeploy"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  network_interface_ids = [
    azurerm_network_interface.win_ama_ps_deploy_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2022-datacenter-azure-edition"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR PowerShell Deployment Lab"
  })
}

# WinAMACLIDeploy
resource "azurerm_public_ip" "win_ama_cli_deploy_pip" {
  name                = "WinAMACLIDeploy-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "win_ama_cli_deploy_nic" {
  name                = "WinAMACLIDeploy-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.win_ama_cli_deploy_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "win_ama_cli_deploy_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.win_ama_cli_deploy_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_windows_virtual_machine" "win_ama_cli_deploy" {
  name                = "WinAMACLIDeploy"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  network_interface_ids = [
    azurerm_network_interface.win_ama_cli_deploy_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2022-datacenter-azure-edition"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "DCR CLI Deployment Lab"
  })
}

# WinAMAPolicyDep
resource "azurerm_public_ip" "win_ama_policy_dep_pip" {
  name                = "WinAMAPolicyDep-pip"
  resource_group_name = var.resource_group_name
  location            = var.location
  allocation_method   = "Static"`r`n  sku                 = "Standard"
  zones               = ["2"]

  tags = var.tags
}

resource "azurerm_network_interface" "win_ama_policy_dep_nic" {
  name                = "WinAMAPolicyDep-nic"
  location            = var.location
  resource_group_name = var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = var.subnet_id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.win_ama_policy_dep_pip.id
  }

  tags = var.tags
}

resource "azurerm_network_interface_security_group_association" "win_ama_policy_dep_nsg_assoc" {
  network_interface_id      = azurerm_network_interface.win_ama_policy_dep_nic.id
  network_security_group_id = var.nsg_id
}

resource "azurerm_windows_virtual_machine" "win_ama_policy_dep" {
  name                = "WinAMAPolicyDep"
  resource_group_name = var.resource_group_name
  location            = var.location
  size                = "Standard_D2s_v3"
  zone                = "2"

  network_interface_ids = [
    azurerm_network_interface.win_ama_policy_dep_nic.id,
  ]

  admin_username = var.admin_username
  admin_password = var.admin_password

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2022-datacenter-azure-edition"
    version   = "latest"
  }

  tags = merge(var.tags, {
    Purpose = "Policy Based Agent Deployment Lab"
  })
}
